(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();let e=[];class n{constructor(t){this.title=t}}function o(t){let e=c();for(let n=0;e.length>n;n++)if(e[n].title===t)return e[n]}function i(t,e){let n=o(t);n.todoList,function(t,e){let n=c();for(let o=0;n.length>o;o++)n[o].title===t.title&&(void 0===n[o].todoList&&(n[o].todoList={}),n[o].todoList[`${e.title}`]=e);localStorage.setItem("projects",JSON.stringify(n))}(n,e)}function c(){return JSON.parse(localStorage.getItem("projects"))}n.prototype.changeTitle=function(t){this.title=t};class l{constructor(t,e="",n="No Due Date",o=5,i=""){this.title=t,this.description=e,this.dueDate=n,this.priority=o,this.notes=i}}const s=t.p+"e3b6ef0fc8b1ecd5d1a9.svg",a=t.p+"8d317290131028fe10cf.svg",r=t.p+"365f3e7f182c9f913994.svg",d=t.p+"97d4c0a10ac97607dc65.svg";function u(t){const e=document.querySelector(".todo-list");e.textContent="";const n=document.createElement("h1");n.className="tab-title";let o=JSON.parse(localStorage.getItem("projects"));for(let i=0;o.length>i;i++)if(console.log(o[i]),o[i].title===t){n.textContent=o[i].title,e.append(n);for(const n in o[i].todoList){let c=p(o[i].todoList[n],t);e.append(c)}}}function m(t){const e=document.querySelector(".project-list"),n=document.createElement("li");n.className="project",n.dataset.name=t.title;const o=new Image;o.src=r;const i=document.createElement("p");i.textContent=t.title;const l=new Image;l.style.display="none",l.src=d,i.addEventListener("click",(e=>{!function(t){let e=document.querySelector(".sidebar").children;for(let t=0;e.length>t;t++)if(e[t].classList.contains("main-list")||e[t].classList.contains("project-list")){let n=e[t].children[0].children;for(let t=0;n.length>t;t++)n[t].classList.contains("active")&&n[t].classList.toggle("active")}t.classList.toggle("active")}(n),u(t.title)})),n.addEventListener("mouseover",(t=>{l.style.display="block"})),n.addEventListener("mouseout",(t=>{l.style.display="none"})),l.addEventListener("click",(e=>{n.remove(),function(t){let e=c();for(let n=0;e.length>n;n++)if(e[n].title===t){delete e[n];let t=e.filter((t=>t));localStorage.setItem("projects",JSON.stringify(t))}}(t.title)})),n.append(o,i,l),e.append(n)}function p(t,e){const n=document.createElement("div");n.className="todo-item-container",n.dataset.name=t.title;const o=document.createElement("div");o.className="todo-item";const i=new Image;i.src=s,i.className="todo-item-checkmark";const l=document.createElement("p");l.className="todo-item-title",l.textContent=t.title;const r=document.createElement("p");r.textContent=t.dueDate;const d=new Image;return d.className="todo-item-edit",d.src=a,i.addEventListener("click",(n=>{o.remove(),function(t,e){let n=c();for(let o=0;n.length>o;o++)n[o].title===e&&(delete n[o].todoList[`${t.title}`],localStorage.setItem("projects",JSON.stringify(n)))}(t,e)})),o.addEventListener("mouseover",(t=>{d.style.display="block"})),o.addEventListener("mouseout",(t=>{d.style.display="none"})),l.addEventListener("click",(e=>{f(t,n,o,d)})),d.addEventListener("click",(e=>{f(t,n,o,d)})),o.append(i,l,r,d),n.append(o),n}function f(t,e,n,i){if(!0===e.classList.contains("active-todo-item"))document.querySelector(".edit-container").remove(),e.classList.toggle("active-todo-item"),n.classList.toggle("edit-container-active");else{n.classList.add("edit-container-active"),i.style.display="block",o(g());let l=document.createElement("div");l.className="edit-container";let s=document.createElement("label");s.className="edit-title-label",s.setAttribute("for","edit-title"),s.textContent="Title:";let a=document.createElement("input");a.setAttribute("id","edit-title"),a.value=t.title;let r=document.createElement("label");r.textContent="Due Date:",r.setAttribute("for","edit-date");let d=document.createElement("input");d.setAttribute("id","edit-date"),d.setAttribute("type","date");let m=document.createElement("label");m.className="edit-priority-label",m.setAttribute("for","edit-priority"),m.textContent="Priority:";let p=document.createElement("input");p.setAttribute("id","edit-priority"),p.setAttribute("type","number"),p.setAttribute("max",5),p.setAttribute("min",1),p.value=t.priority;let f=document.createElement("label");f.setAttribute("for","edit-description"),f.textContent="Description:";let v=document.createElement("textarea");v.setAttribute("id","edit-description"),v.value=t.description,v.placeholder="abcd your description comes here I think";let y=document.createElement("button");y.className="edit-save",y.textContent="Save",y.addEventListener("click",(e=>{let n=g();!function(t,e,n,o,i,l){let s=function(t,e,n){let o=[];return""===t?"no title":(""===e&&o.push("No Due Date"),""===n&&o.push(5),o)}(e,o,i),a=c();for(let c=0;a.length>c;c++)if(a[c].title===l){let l=a[c].todoList[t.title];a[c].todoList[e]=l,delete a[c].todoList[t.title];let r=a[c].todoList[e]=l;if("no title"===s)alert("Title cannot be empty!");else{r.title=e,r.description=n,r.dueDate=o,r.priority=parseInt(i);for(let t=0;s.length>=t;t++)"No Due Date"===s[t]&&(r.dueDate="No Due Date"),"number"==typeof s[t]&&(r.priority=5)}}localStorage.setItem("projects",JSON.stringify(a))}(t,a.value,v.value,d.value,p.value,n),u(n)})),l.append(s,a,m,p,f,v,r,d,y),e.append(l),e.classList.add("active-todo-item")}let l=document.querySelector(".todo-list").children;for(let e=0;l.length>e;e++)if(l[e].classList.contains("active-todo-item"))if(l[e].dataset.name===t.title)console.log("JEST THE LEST YOU MEST FUCK THE REST");else{let t=l[e].children;for(let n=0;t.length>n;n++)t[n].classList.contains("edit-container")&&(t[n].remove(),l[e].classList.toggle("active-todo-item"),l[e].children[0].classList.toggle("edit-container-active"))}}function g(){return document.querySelector(".active").dataset.name}null===localStorage.getItem("firstTime")&&(localStorage.setItem("firstTime","false"),function(){const t=new n("inbox"),o=new n("today"),c=new n("upcoming"),s=new l("Complete the Todo List Project","The Odin Project Todo Project!","07-25-2022",5,"");(function(...t){for(let n=0;t.length>n;n++){let o={title:t[n].title};e.push(o)}localStorage.setItem("projects",JSON.stringify(e))})(t,o,c),i(t,s)}()),u("inbox"),function(){let t=c();for(let e=0;t.length>e;e++)"inbox"===t[e].title||"today"===t[e].title||"upcoming"===t[e].title?console.log("wut"):m(t[e])}(),function(){const t=document.querySelector(".task-add");t.addEventListener("click",(e=>{let n=g();!function(t,e){const n=document.querySelector(".todo"),o=document.createElement("div");o.className="task-add-input";const c=document.createElement("input");c.className="task-add-title";const s=document.createElement("button");s.className="task-add-cancel",s.textContent="Cancel";const a=document.createElement("button");a.className="task-add-submit",a.textContent="Submit",t.style.display="none",o.append(c,a,s),n.append(o),function(t,e,n,o,c){const s=document.querySelector(".task-add");t.addEventListener("click",(t=>{!function(t,e){i(e,new l(t))}(n.value,c),u(c),s.style.display="grid",o.remove()})),e.addEventListener("click",(t=>{s.style.display="grid",o.remove()}))}(a,s,c,o,e)}(t,n)}))}(),function(){const t=document.querySelector(".add-project");t.addEventListener("click",(e=>{!function(t){const e=document.querySelector(".project-list"),n=document.createElement("div");n.className="project-add-div";const o=document.createElement("input");o.className="project-add-title";const i=document.createElement("button");i.className="project-add-cancel",i.textContent="Cancel";const l=document.createElement("button");var s,a,r,d;l.className="project-add-submit",l.textContent="Submit",t.style.display="none",s=o,a=n,r=i,d=t,l.addEventListener("click",(t=>{!function(t){let e=c(),n={title:t};e.push(n),localStorage.setItem("projects",JSON.stringify(e))}(s.value)})),r.addEventListener("click",(t=>{d.style.display="grid",a.remove()})),n.append(o,l,i),e.append(n)}(t)}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,