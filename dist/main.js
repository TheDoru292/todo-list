(()=>{"use strict";var t={};t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(t){if("object"==typeof window)return window}}(),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var o=n.getElementsByTagName("script");o.length&&(e=o[o.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})();let e=[];class n{constructor(t){this.title=t}}function o(t){let e=c();for(let n=0;e.length>n;n++)if(e[n].title===t)return e[n]}function i(t,e){let n=o(t);n.todoList,function(t,e){let n=c();for(let o=0;n.length>o;o++)n[o].title===t.title&&(void 0===n[o].todoList&&(n[o].todoList={}),n[o].todoList[`${e.title}`]=e);localStorage.setItem("projects",JSON.stringify(n))}(n,e)}function c(){return JSON.parse(localStorage.getItem("projects"))}n.prototype.changeTitle=function(t){this.title=t};class l{constructor(t,e="",n="No Due Date",o=5,i=""){this.title=t,this.description=e,this.dueDate=n,this.priority=o,this.notes=i}}const a=t.p+"e3b6ef0fc8b1ecd5d1a9.svg",s=t.p+"8d317290131028fe10cf.svg";function r(t){const e=document.querySelector(".todo-list");e.textContent="";const n=document.createElement("h1");n.className="tab-title";let o=JSON.parse(localStorage.getItem("projects"));for(let i=0;o.length>i;i++)if(o[i].title===t){n.textContent=o[i].title,e.append(n);for(const n in o[i].todoList){let c=d(o[i].todoList[n],t);e.append(c)}}}function d(t,e){const n=document.createElement("div");n.className="todo-item-container",n.dataset.name=t.title;const o=document.createElement("div");o.className="todo-item";const i=new Image;i.src=a,i.className="todo-item-checkmark";const l=document.createElement("p");l.className="todo-item-title",l.textContent=t.title;const r=document.createElement("p");r.textContent=t.dueDate;const d=new Image;return d.className="todo-item-edit",d.src=s,i.addEventListener("click",(n=>{o.remove(),function(t,e){let n=c();for(let o=0;n.length>o;o++)n[o].title===e&&(delete n[o].todoList[`${t.title}`],localStorage.setItem("projects",JSON.stringify(n)))}(t,e)})),o.addEventListener("mouseover",(t=>{d.style.display="block"})),o.addEventListener("mouseout",(t=>{d.style.display="none"})),l.addEventListener("click",(e=>{u(t,n,o,d)})),d.addEventListener("click",(e=>{u(t,n,o,d)})),o.append(i,l,r,d),n.append(o),n}function u(t,e,n,i){if(!0===e.classList.contains("active-todo-item"))document.querySelector(".edit-container").remove(),e.classList.toggle("active-todo-item"),n.classList.toggle("edit-container-active");else{n.classList.add("edit-container-active"),i.style.display="block",o(m());let l=document.createElement("div");l.className="edit-container";let a=document.createElement("label");a.className="edit-title-label",a.setAttribute("for","edit-title"),a.textContent="Title:";let s=document.createElement("input");s.setAttribute("id","edit-title"),s.value=t.title;let d=document.createElement("label");d.textContent="Due Date:",d.setAttribute("for","edit-date");let u=document.createElement("input");u.setAttribute("id","edit-date"),u.setAttribute("type","date");let p=document.createElement("label");p.className="edit-priority-label",p.setAttribute("for","edit-priority"),p.textContent="Priority:";let f=document.createElement("input");f.setAttribute("id","edit-priority"),f.setAttribute("type","number"),f.setAttribute("max",5),f.setAttribute("min",1),f.value=t.priority;let g=document.createElement("label");g.setAttribute("for","edit-description"),g.textContent="Description:";let v=document.createElement("textarea");v.setAttribute("id","edit-description"),v.value=t.description,v.placeholder="abcd your description comes here I think";let y=document.createElement("button");y.className="edit-save",y.textContent="Save",y.addEventListener("click",(e=>{let n=m();!function(t,e,n,o,i,l){let a=function(t,e,n){let o=[];return""===t?"no title":(""===e&&o.push("No Due Date"),""===n&&o.push(5),o)}(e,o,i),s=c();for(let c=0;s.length>c;c++)if(s[c].title===l){let l=s[c].todoList[t.title];s[c].todoList[e]=l,delete s[c].todoList[t.title];let r=s[c].todoList[e]=l;if("no title"===a)alert("Title cannot be empty!");else{r.title=e,r.description=n,r.dueDate=o,r.priority=parseInt(i);for(let t=0;a.length>=t;t++)"No Due Date"===a[t]&&(r.dueDate="No Due Date"),"number"==typeof a[t]&&(r.priority=5)}}localStorage.setItem("projects",JSON.stringify(s))}(t,s.value,v.value,u.value,f.value,n),r(n)})),l.append(a,s,p,f,g,v,d,u,y),e.append(l),e.classList.add("active-todo-item")}}function m(){return document.querySelector(".active").dataset.name}null===localStorage.getItem("firstTime")&&(localStorage.setItem("firstTime","false"),function(){const t=new n("inbox"),o=new n("today"),c=new n("upcoming"),a=new l("Complete the Todo List Project","The Odin Project Todo Project!","07-25-2022",5,"");(function(...t){for(let n=0;t.length>n;n++){let o={title:t[n].title};e.push(o)}localStorage.setItem("projects",JSON.stringify(e))})(t,o,c),i(t,a)}()),r("inbox"),function(){const t=document.querySelector(".task-add");t.addEventListener("click",(e=>{let n=m();!function(t,e){const n=document.querySelector(".todo"),o=document.createElement("div");o.className="task-add-input";const c=document.createElement("input");c.className="task-add-title";const a=document.createElement("button");a.className="task-add-cancel",a.textContent="Cancel";const s=document.createElement("button");s.className="task-add-submit",s.textContent="Submit",t.style.display="none",o.append(c,s,a),n.append(o),function(t,e,n,o,c){const a=document.querySelector(".task-add");t.addEventListener("click",(t=>{!function(t,e){i(e,new l(t))}(n.value,c),r(c),a.style.display="grid",o.remove()})),e.addEventListener("click",(t=>{a.style.display="grid",o.remove()}))}(s,a,c,o,e)}(t,n)}))}()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,